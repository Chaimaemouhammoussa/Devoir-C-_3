#include <iostream>

class vect {
protected:
    int nelem; 
    int* adr;  

public:
    vect(int n) : nelem(n), adr(new int[n]) {}
    ~vect() { delete[] adr; }
    int& operator[](int i) { return adr[i]; }
};

class vectok : public vect {
public:
    vectok(int n) : vect(n) {}

    int taille() const { return nelem; }
};

int main() {
    vectok v1(5);
    v1[0] = 1;
    v1[1] = 2;

    std::cout << "Taille de v1 : " << v1.taille() << std::endl;

    vectok v2 = v1; 

    std::cout << "Taille de v2 : " << v2.taille() << std::endl;

    v2[0] = 10; 
    std::cout << "v1[0] : " << v1[0] << std::endl;
    std::cout << "v2[0] : " << v2[0] << std::endl;

    return 0;
}
