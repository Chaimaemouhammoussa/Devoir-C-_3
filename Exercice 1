#include <iostream>
using namespace std;
class Complex {
private:
    double real;
    double imag;

public:
    Complex(double real, double imag) : real(real), imag(imag) {}

    Complex operator+(const Complex& other) const {
        return Complex(real + other.real, imag + other.imag);
    }

    Complex operator-(const Complex& other) const {
        return Complex(real - other.real, imag - other.imag);
    }

    Complex operator*(const Complex& other) const {
        return Complex((real * other.real) - (imag * other.imag), (real * other.imag) + (imag * other.real));
    }

    void display() {
       cout << "Partie réelle : " << real << " Partie imaginaire : " << imag << endl;
    }
};

int main() {
    double real1, imag1, real2, imag2;

   cout << "Entrez la partie réelle du premier nombre complexe : ";
    cin >> real1;
   cout << "Entrez la partie imaginaire du premier nombre complexe : ";
    cin >> imag1;

    cout << "Entrez la partie réelle du deuxième nombre complexe : ";
    cin >> real2;
    cout << "Entrez la partie imaginaire du deuxième nombre complexe : ";
  cin >> imag2;

    Complex complex1(real1, imag1);
    Complex complex2(real2, imag2);

    Complex result = complex1 + complex2;
    cout << "Addition : ";
    result.display();

    result = complex1 - complex2;
    cout << "Soustraction : ";
    result.display();

    result = complex1 * complex2;
   cout << "Multiplication : ";
    result.display();

    return 0;
}
